name: Test and Deploy

on:
  pull_request:
    branches: [main, staging]
  push:
    branches: [main, staging]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm test

      - name: Run accessibility checks
        run: npm run a11y-check

      - name: Check bundle size
        run: npm run check-bundle-size

      - name: Comment test results
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… All tests passed! Ready for review.'
            })

  preview-deployment:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to preview environment
        run: echo "Preview deployed to https://pr-${{ github.event.number }}.bandtogether-preview.com"

      - name: Comment preview URL
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Preview deployment ready!\n\nðŸ‘‰ https://pr-${{ github.event.number }}.bandtogether-preview.com\n\nTest the changes and share with stakeholders.'
            })

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Deploy to staging
        run: echo "Deploying to staging environment..."

      - name: Notify team
        run: echo "Staging deployment complete"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      url: https://www.bandtogether.com

    steps:
      - name: Deploy to production
        run: echo "Deploying to production environment..."

      - name: Verify deployment
        run: echo "Running smoke tests..."

      - name: Notify team
        run: echo "Production deployment complete"
